[{"C:\\Users\\Dylan Vu\\Visual Studio Code Projects\\Projects\\vu-dylan.github.io\\src\\index.js":"1","C:\\Users\\Dylan Vu\\Visual Studio Code Projects\\Projects\\vu-dylan.github.io\\src\\App.js":"2","C:\\Users\\Dylan Vu\\Visual Studio Code Projects\\Projects\\vu-dylan.github.io\\src\\reportWebVitals.js":"3","C:\\Users\\Dylan Vu\\Visual Studio Code Projects\\Projects\\vu-dylan.github.io\\src\\components\\ProjectGroup.jsx":"4","C:\\Users\\Dylan Vu\\Visual Studio Code Projects\\Projects\\vu-dylan.github.io\\src\\components\\Navbar.jsx":"5","C:\\Users\\Dylan Vu\\Visual Studio Code Projects\\Projects\\vu-dylan.github.io\\src\\components\\Collapsible.jsx":"6","C:\\Users\\Dylan Vu\\Visual Studio Code Projects\\Projects\\vu-dylan.github.io\\src\\components\\ProjectContent.jsx":"7"},{"size":517,"mtime":1630627449370,"results":"8","hashOfConfig":"9"},{"size":3804,"mtime":1630631351622,"results":"10","hashOfConfig":"9"},{"size":375,"mtime":1630615655759,"results":"11","hashOfConfig":"9"},{"size":2016,"mtime":1630615655741,"results":"12","hashOfConfig":"9"},{"size":3604,"mtime":1630630424270,"results":"13","hashOfConfig":"9"},{"size":3544,"mtime":1630615655716,"results":"14","hashOfConfig":"9"},{"size":2652,"mtime":1630615655739,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"mdk4ti",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"C:\\Users\\Dylan Vu\\Visual Studio Code Projects\\Projects\\vu-dylan.github.io\\src\\index.js",[],"C:\\Users\\Dylan Vu\\Visual Studio Code Projects\\Projects\\vu-dylan.github.io\\src\\App.js",[],"C:\\Users\\Dylan Vu\\Visual Studio Code Projects\\Projects\\vu-dylan.github.io\\src\\reportWebVitals.js",[],["33","34"],"C:\\Users\\Dylan Vu\\Visual Studio Code Projects\\Projects\\vu-dylan.github.io\\src\\components\\ProjectGroup.jsx",["35"],"import React from 'react'\r\nimport ProjectContent from './ProjectContent'\r\nimport Collapsible from './Collapsible'\r\n\r\n/* Props\r\ncolor = string hex color of the project groups\r\ngroup = string of name of the project group\r\nscroll = css id to scroll to\r\nprojects = array of project objects with the following attributes:\r\n    projectHook = string sentence to \"hook\" someone in\r\n    projectName = name of the specific project\r\n    textPath = path to .txt file containing the project contents in the public folder, relative to the public folder\r\n*/\r\n\r\n\r\nconst ProjectGroup = (props) => {\r\n    return (\r\n        <div className=\"ProjectGroup\">\r\n            {/* <p className=\"project-group-title\" style={{color: `${props.color}` }}>\r\n                {props.group}\r\n            </p> */}\r\n            <button type=\"button\" className=\"project-group-title\" id={props.scroll} style={{borderColor : `${props.color}`}}>{props.group}</button>\r\n            <br/>\r\n            <br/>\r\n            {props.projects.map((project) => (\r\n                <ProjectContent hook={project.projectHook} title={project.projectName} id={project.projectName} textPath={project.textPath} color={props.color}/>\r\n            ))}\r\n            {/* {props.projects.map((project) => (\r\n                <div>\r\n                    <p>\r\n                        {project.projectHook}&nbsp;\r\n                        <span className=\"text-category\" style={{color: `${props.color}` }} >{project.projectName}</span>\r\n                    </p>\r\n                    <br/>\r\n                </div>\r\n            ))}\r\n            {props.projects.map((project) => (\r\n                <ProjectContent color={props.color} name={project.projectName} image={project.projectImage} description={project.projectDescription}/>\r\n            ))} */}\r\n        </div>\r\n    )\r\n}\r\n// When you refresh, the content does not get routed again. Check out https://stackoverflow.com/questions/27928372/react-router-urls-dont-work-when-refreshing-or-writing-manually\r\nexport default ProjectGroup","C:\\Users\\Dylan Vu\\Visual Studio Code Projects\\Projects\\vu-dylan.github.io\\src\\components\\Navbar.jsx",["36"],"import {React, useState} from 'react'\r\n// Import font awesome icons. Follow these instructions: https://fontawesome.com/how-to-use/on-the-web/using-with/react\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faGithub } from '@fortawesome/free-brands-svg-icons'\r\nimport { faLinkedinIn } from '@fortawesome/free-brands-svg-icons'\r\nimport { faEnvelope } from '@fortawesome/free-solid-svg-icons'\r\n\r\n// The eslint-disable-next-line is necessary because these are <a> and not <button> so tons of warnings pop up.\r\n//I'm a bit lazy to fix this because it would involve fixing the css styling and this works as it is\r\nconst Navbar = () => {\r\n    const [responsiveClass, setResponsive] = useState(\"inactive\");\r\n\r\n    function scrolling(id) {\r\n        if (responsiveClass === \"is-responsive\") {\r\n            setResponsive('inactive');\r\n        }\r\n\t\tdocument.getElementById(id).scrollIntoView({behavior: \"smooth\"});\r\n\t}\r\n    \r\n    function toggleBurger() {\r\n        console.log(\"Burger clicked\");\r\n        if (responsiveClass === \"inactive\") {\r\n            setResponsive('is-responsive');\r\n        } else {\r\n            setResponsive('inactive');\r\n        }\r\n    }\r\n\r\n    function colorChange(id) {\r\n        let icon = document.getElementById(id);\r\n        if (icon.style.color === \"#f2f2f2\") {\r\n            icon.style.color = \"#26C485\";\r\n        } else {\r\n            icon.style.color = \"#f2f2f2\";\r\n        }\r\n        \r\n    }\r\n\r\n    return(\r\n        <nav className={`navbar ${responsiveClass}`} id=\"navbar\">\r\n            {/* eslint-disable-next-line */}\r\n            <a className=\"nav-link\" onClick={() => scrolling('About')}><span className=\"name\">Dylan Vu</span></a>\r\n            {/* eslint-disable-next-line */}\r\n            <a className=\"nav-link\" style={{ color: \"#c0392b\" }} onClick={() => scrolling('JS')}><span>JavaScript/NodeJS</span></a>\r\n            {/* eslint-disable-next-line */}\r\n            <a className=\"nav-link\" style={{ color: \"#2081C3\" }} onClick={() => scrolling('Python')}><span>Python</span></a>\r\n            {/* eslint-disable-next-line */}\r\n            <a className=\"nav-link\" style={{ color: \"#6DA34D\" }} onClick={() => scrolling('C')}><span>C++/C#</span></a>\r\n            {/* eslint-disable-next-line */}\r\n            <a className=\"nav-link\" style={{ color: \"#FE5D26\" }} href=\"/about/Dylan Vu Resume.pdf\" target=\"_blank\" rel=\"noreferrer\"><span>Resume</span></a>\r\n            <a href=\"https://github.com/vu-dylan\" target=\"_blank\" rel=\"noreferrer\" style={{ color: \"#f2f2f2\" }}>\r\n                <FontAwesomeIcon\r\n                    icon={faGithub}\r\n                    id=\"github\"\r\n                    className=\"icon\"\r\n                />\r\n            </a>\r\n            <a href=\"https://www.linkedin.com/in/dylanvu9/\" target=\"_blank\" rel=\"noreferrer\" style={{ color: \"#f2f2f2\" }}>\r\n                <FontAwesomeIcon\r\n                    icon={faLinkedinIn}\r\n                    \r\n                    className=\"icon\"\r\n                />\r\n            </a>\r\n            <a href=\"mailto:dylanvu@ucsb.edu\" target=\"_blank\" rel=\"noreferrer\" style={{ color: \"#f2f2f2\" }}>\r\n                <FontAwesomeIcon\r\n                    icon={faEnvelope}\r\n                    \r\n                    className=\"icon\"\r\n                />\r\n            </a> \r\n            <div className={`hamburger ${responsiveClass}`} id=\"hamburger\" onClick={() => toggleBurger()}>\r\n                <span className=\"line\"></span>\r\n                <span className=\"line\"></span>\r\n                <span className=\"line\"></span>\r\n            </div>\r\n        </nav>\r\n    )\r\n\r\n}\r\n\r\nexport default Navbar","C:\\Users\\Dylan Vu\\Visual Studio Code Projects\\Projects\\vu-dylan.github.io\\src\\components\\Collapsible.jsx",[],"C:\\Users\\Dylan Vu\\Visual Studio Code Projects\\Projects\\vu-dylan.github.io\\src\\components\\ProjectContent.jsx",[],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":3,"column":8,"nodeType":"43","messageId":"44","endLine":3,"endColumn":19},{"ruleId":"41","severity":1,"message":"45","line":29,"column":14,"nodeType":"43","messageId":"44","endLine":29,"endColumn":25},"no-native-reassign",["46"],"no-negated-in-lhs",["47"],"no-unused-vars","'Collapsible' is defined but never used.","Identifier","unusedVar","'colorChange' is defined but never used.","no-global-assign","no-unsafe-negation"]