[{"C:\\Users\\Dylan Vu\\Visual Studio Code Projects\\Projects\\portfolio\\src\\index.js":"1","C:\\Users\\Dylan Vu\\Visual Studio Code Projects\\Projects\\portfolio\\src\\App.js":"2","C:\\Users\\Dylan Vu\\Visual Studio Code Projects\\Projects\\portfolio\\src\\reportWebVitals.js":"3","C:\\Users\\Dylan Vu\\Visual Studio Code Projects\\Projects\\portfolio\\src\\components\\ProjectGroup.jsx":"4","C:\\Users\\Dylan Vu\\Visual Studio Code Projects\\Projects\\portfolio\\src\\components\\Sidebar.jsx":"5","C:\\Users\\Dylan Vu\\Visual Studio Code Projects\\Projects\\portfolio\\src\\components\\ProjectContent.jsx":"6","C:\\Users\\Dylan Vu\\Visual Studio Code Projects\\Projects\\portfolio\\src\\components\\Collapsible.jsx":"7","C:\\Users\\Dylan Vu\\Visual Studio Code Projects\\Projects\\portfolio\\src\\components\\Navbar.jsx":"8"},{"size":500,"mtime":499162500000,"results":"9","hashOfConfig":"10"},{"size":4180,"mtime":1630579285306,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":2016,"mtime":1630537349066,"results":"13","hashOfConfig":"10"},{"size":2329,"mtime":1630457043350,"results":"14","hashOfConfig":"10"},{"size":2872,"mtime":1630579051972,"results":"15","hashOfConfig":"10"},{"size":3544,"mtime":1630463017496,"results":"16","hashOfConfig":"10"},{"size":3691,"mtime":1630577673470,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"8mro2l",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Dylan Vu\\Visual Studio Code Projects\\Projects\\portfolio\\src\\index.js",[],["37","38"],"C:\\Users\\Dylan Vu\\Visual Studio Code Projects\\Projects\\portfolio\\src\\App.js",[],"C:\\Users\\Dylan Vu\\Visual Studio Code Projects\\Projects\\portfolio\\src\\reportWebVitals.js",[],"C:\\Users\\Dylan Vu\\Visual Studio Code Projects\\Projects\\portfolio\\src\\components\\ProjectGroup.jsx",["39"],"import React from 'react'\r\nimport ProjectContent from './ProjectContent'\r\nimport Collapsible from './Collapsible'\r\n\r\n/* Props\r\ncolor = string hex color of the project groups\r\ngroup = string of name of the project group\r\nscroll = css id to scroll to\r\nprojects = array of project objects with the following attributes:\r\n    projectHook = string sentence to \"hook\" someone in\r\n    projectName = name of the specific project\r\n    textPath = path to .txt file containing the project contents in the public folder, relative to the public folder\r\n*/\r\n\r\n\r\nconst ProjectGroup = (props) => {\r\n    return (\r\n        <div className=\"ProjectGroup\">\r\n            {/* <p className=\"project-group-title\" style={{color: `${props.color}` }}>\r\n                {props.group}\r\n            </p> */}\r\n            <button type=\"button\" className=\"project-group-title\" id={props.scroll} style={{borderColor : `${props.color}`}}>{props.group}</button>\r\n            <br/>\r\n            <br/>\r\n            {props.projects.map((project) => (\r\n                <ProjectContent hook={project.projectHook} title={project.projectName} id={project.projectName} textPath={project.textPath} color={props.color}/>\r\n            ))}\r\n            {/* {props.projects.map((project) => (\r\n                <div>\r\n                    <p>\r\n                        {project.projectHook}&nbsp;\r\n                        <span className=\"text-category\" style={{color: `${props.color}` }} >{project.projectName}</span>\r\n                    </p>\r\n                    <br/>\r\n                </div>\r\n            ))}\r\n            {props.projects.map((project) => (\r\n                <ProjectContent color={props.color} name={project.projectName} image={project.projectImage} description={project.projectDescription}/>\r\n            ))} */}\r\n        </div>\r\n    )\r\n}\r\n// When you refresh, the content does not get routed again. Check out https://stackoverflow.com/questions/27928372/react-router-urls-dont-work-when-refreshing-or-writing-manually\r\nexport default ProjectGroup","C:\\Users\\Dylan Vu\\Visual Studio Code Projects\\Projects\\portfolio\\src\\components\\Sidebar.jsx",[],["40","41"],"C:\\Users\\Dylan Vu\\Visual Studio Code Projects\\Projects\\portfolio\\src\\components\\ProjectContent.jsx",[],"C:\\Users\\Dylan Vu\\Visual Studio Code Projects\\Projects\\portfolio\\src\\components\\Collapsible.jsx",[],"C:\\Users\\Dylan Vu\\Visual Studio Code Projects\\Projects\\portfolio\\src\\components\\Navbar.jsx",["42"],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":3,"column":8,"nodeType":"49","messageId":"50","endLine":3,"endColumn":19},{"ruleId":"43","replacedBy":"51"},{"ruleId":"45","replacedBy":"52"},{"ruleId":"47","severity":1,"message":"53","line":29,"column":14,"nodeType":"49","messageId":"50","endLine":29,"endColumn":25},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"no-unused-vars","'Collapsible' is defined but never used.","Identifier","unusedVar",["54"],["55"],"'colorChange' is defined but never used.","no-global-assign","no-unsafe-negation"]