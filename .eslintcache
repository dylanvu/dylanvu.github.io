[{"C:\\Users\\Dylan Vu\\Visual Studio Code Projects\\Projects\\vu-dylan.github.io\\src\\index.js":"1","C:\\Users\\Dylan Vu\\Visual Studio Code Projects\\Projects\\vu-dylan.github.io\\src\\App.js":"2","C:\\Users\\Dylan Vu\\Visual Studio Code Projects\\Projects\\vu-dylan.github.io\\src\\reportWebVitals.js":"3","C:\\Users\\Dylan Vu\\Visual Studio Code Projects\\Projects\\vu-dylan.github.io\\src\\components\\ProjectGroup.jsx":"4","C:\\Users\\Dylan Vu\\Visual Studio Code Projects\\Projects\\vu-dylan.github.io\\src\\components\\Navbar.jsx":"5","C:\\Users\\Dylan Vu\\Visual Studio Code Projects\\Projects\\vu-dylan.github.io\\src\\components\\Collapsible.jsx":"6","C:\\Users\\Dylan Vu\\Visual Studio Code Projects\\Projects\\vu-dylan.github.io\\src\\components\\ProjectContent.jsx":"7"},{"size":517,"mtime":1630627449370,"results":"8","hashOfConfig":"9"},{"size":3792,"mtime":1630627794828,"results":"10","hashOfConfig":"9"},{"size":375,"mtime":1630615655759,"results":"11","hashOfConfig":"9"},{"size":2016,"mtime":1630615655741,"results":"12","hashOfConfig":"9"},{"size":3688,"mtime":1630628533143,"results":"13","hashOfConfig":"9"},{"size":3544,"mtime":1630615655716,"results":"14","hashOfConfig":"9"},{"size":2652,"mtime":1630615655739,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"mdk4ti",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"C:\\Users\\Dylan Vu\\Visual Studio Code Projects\\Projects\\vu-dylan.github.io\\src\\index.js",[],"C:\\Users\\Dylan Vu\\Visual Studio Code Projects\\Projects\\vu-dylan.github.io\\src\\App.js",[],"C:\\Users\\Dylan Vu\\Visual Studio Code Projects\\Projects\\vu-dylan.github.io\\src\\reportWebVitals.js",[],["32","33"],"C:\\Users\\Dylan Vu\\Visual Studio Code Projects\\Projects\\vu-dylan.github.io\\src\\components\\ProjectGroup.jsx",["34"],"import React from 'react'\r\nimport ProjectContent from './ProjectContent'\r\nimport Collapsible from './Collapsible'\r\n\r\n/* Props\r\ncolor = string hex color of the project groups\r\ngroup = string of name of the project group\r\nscroll = css id to scroll to\r\nprojects = array of project objects with the following attributes:\r\n    projectHook = string sentence to \"hook\" someone in\r\n    projectName = name of the specific project\r\n    textPath = path to .txt file containing the project contents in the public folder, relative to the public folder\r\n*/\r\n\r\n\r\nconst ProjectGroup = (props) => {\r\n    return (\r\n        <div className=\"ProjectGroup\">\r\n            {/* <p className=\"project-group-title\" style={{color: `${props.color}` }}>\r\n                {props.group}\r\n            </p> */}\r\n            <button type=\"button\" className=\"project-group-title\" id={props.scroll} style={{borderColor : `${props.color}`}}>{props.group}</button>\r\n            <br/>\r\n            <br/>\r\n            {props.projects.map((project) => (\r\n                <ProjectContent hook={project.projectHook} title={project.projectName} id={project.projectName} textPath={project.textPath} color={props.color}/>\r\n            ))}\r\n            {/* {props.projects.map((project) => (\r\n                <div>\r\n                    <p>\r\n                        {project.projectHook}&nbsp;\r\n                        <span className=\"text-category\" style={{color: `${props.color}` }} >{project.projectName}</span>\r\n                    </p>\r\n                    <br/>\r\n                </div>\r\n            ))}\r\n            {props.projects.map((project) => (\r\n                <ProjectContent color={props.color} name={project.projectName} image={project.projectImage} description={project.projectDescription}/>\r\n            ))} */}\r\n        </div>\r\n    )\r\n}\r\n// When you refresh, the content does not get routed again. Check out https://stackoverflow.com/questions/27928372/react-router-urls-dont-work-when-refreshing-or-writing-manually\r\nexport default ProjectGroup","C:\\Users\\Dylan Vu\\Visual Studio Code Projects\\Projects\\vu-dylan.github.io\\src\\components\\Navbar.jsx",["35"],"C:\\Users\\Dylan Vu\\Visual Studio Code Projects\\Projects\\vu-dylan.github.io\\src\\components\\Collapsible.jsx",[],"C:\\Users\\Dylan Vu\\Visual Studio Code Projects\\Projects\\vu-dylan.github.io\\src\\components\\ProjectContent.jsx",[],{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":3,"column":8,"nodeType":"42","messageId":"43","endLine":3,"endColumn":19},{"ruleId":"40","severity":1,"message":"44","line":29,"column":14,"nodeType":"42","messageId":"43","endLine":29,"endColumn":25},"no-native-reassign",["45"],"no-negated-in-lhs",["46"],"no-unused-vars","'Collapsible' is defined but never used.","Identifier","unusedVar","'colorChange' is defined but never used.","no-global-assign","no-unsafe-negation"]