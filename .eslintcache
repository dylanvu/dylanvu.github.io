[{"C:\\Users\\Dylan\\VSCode\\vu-dylan.github.io\\src\\index.js":"1","C:\\Users\\Dylan\\VSCode\\vu-dylan.github.io\\src\\reportWebVitals.js":"2","C:\\Users\\Dylan\\VSCode\\vu-dylan.github.io\\src\\App.js":"3","C:\\Users\\Dylan\\VSCode\\vu-dylan.github.io\\src\\objects\\project.js":"4","C:\\Users\\Dylan\\VSCode\\vu-dylan.github.io\\src\\components\\Navbar.jsx":"5","C:\\Users\\Dylan\\VSCode\\vu-dylan.github.io\\src\\components\\ProjectGroup.jsx":"6","C:\\Users\\Dylan\\VSCode\\vu-dylan.github.io\\src\\components\\ProjectContent.jsx":"7","C:\\Users\\Dylan\\VSCode\\vu-dylan.github.io\\src\\components\\Contributions.jsx":"8","C:\\Users\\Dylan\\VSCode\\vu-dylan.github.io\\src\\components\\Header.jsx":"9"},{"size":517,"mtime":1639087197084,"results":"10","hashOfConfig":"11"},{"size":375,"mtime":1639087197085,"results":"12","hashOfConfig":"11"},{"size":3047,"mtime":1639213150094,"results":"13","hashOfConfig":"11"},{"size":222,"mtime":1639087197085,"results":"14","hashOfConfig":"11"},{"size":3317,"mtime":1639087197082,"results":"15","hashOfConfig":"11"},{"size":1315,"mtime":1639202745315,"results":"16","hashOfConfig":"11"},{"size":2885,"mtime":1639202781798,"results":"17","hashOfConfig":"11"},{"size":4413,"mtime":1639212276366,"results":"18","hashOfConfig":"11"},{"size":1846,"mtime":1639203898735,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"jcadjw",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"C:\\Users\\Dylan\\VSCode\\vu-dylan.github.io\\src\\index.js",[],["40","41"],"C:\\Users\\Dylan\\VSCode\\vu-dylan.github.io\\src\\reportWebVitals.js",[],"C:\\Users\\Dylan\\VSCode\\vu-dylan.github.io\\src\\App.js",["42","43"],"C:\\Users\\Dylan\\VSCode\\vu-dylan.github.io\\src\\objects\\project.js",[],"C:\\Users\\Dylan\\VSCode\\vu-dylan.github.io\\src\\components\\Navbar.jsx",[],"C:\\Users\\Dylan\\VSCode\\vu-dylan.github.io\\src\\components\\ProjectGroup.jsx",[],"C:\\Users\\Dylan\\VSCode\\vu-dylan.github.io\\src\\components\\ProjectContent.jsx",[],"C:\\Users\\Dylan\\VSCode\\vu-dylan.github.io\\src\\components\\Contributions.jsx",["44","45"],"import {React, useState, useEffect} from 'react';\r\nimport Axios from 'axios';\r\n\r\nconst Contributions = () => {\r\n\r\n    const [contribution, setContrib] = useState(\"\");\r\n    const [repoLink, setRepolink] = useState(\"\");\r\n    const [allRepos, setAllrepos] = useState([{name: \"\", url: \"\"}]);\r\n    const [backupRepo, setbackupRepo] = useState(\"\");\r\n    const [index, setIndex] = useState(0);\r\n    const [done, setDone] = useState(false);\r\n    useEffect(() => {\r\n        // TODO: Get description of the featured GitHub Repo\r\n        // https://docs.github.com/en/rest/reference/activity#list-public-events-for-a-user\r\n        // Use Github API to get most recent push\r\n        Axios.get(\"https://api.github.com/users/vu-dylan/events/public\", {\r\n            params: {per_page: 70}\r\n        }).then((res) => {\r\n            // console.log(res.data);\r\n            let allPush = [];\r\n            let first = true;\r\n\r\n            // Iterate through all events and get only push events to display\r\n            for (let i = 0; i < res.data.length; i++) {\r\n                if (res.data[i].type === 'PushEvent') {\r\n                    let name = res.data[i].repo.name.split('/').at(-1);\r\n                    if (first) {\r\n                        first = false;\r\n                        // console.log(name)\r\n                        setContrib(name);\r\n                        setRepolink(\"https://github.com/\" + res.data[i].repo.name);\r\n                    }\r\n                    allPush.push({name: name, url: \"https://github.com/\" + res.data[i].repo.name})\r\n                } else {\r\n                    console.log(res.data[i])\r\n                }\r\n            }\r\n            // If there is literally no push events, just show the last thing I did.\r\n            if (first) {\r\n                setContrib(res.data[0].repo.name.split('/').at(-1));\r\n                setRepolink(\"https://github.com/\" + res.data[0].repo.name);\r\n            }\r\n            // Remove duplicates\r\n            // https://stackoverflow.com/questions/1960473/get-all-unique-values-in-a-javascript-array-remove-duplicates\r\n            allPush = [...new Map(allPush.map(v => [JSON.stringify(v), v])).values()]\r\n            // Remove first element, which is the most recent thing\r\n            allPush.shift();\r\n            setDone(true);\r\n            setAllrepos(allPush);\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (done && allRepos.length > 0) {\r\n            Type(allRepos[index].name);\r\n        }\r\n    }, [allRepos]);\r\n\r\n    function Type(text) {\r\n\t\tlet currText = text[0];\r\n\t\tlet i = 0;\r\n\t\t// Animate \"typing\"\r\n\t\tsetTimeout(() => {\r\n\t\t\tlet textHandle = setInterval(() => {\r\n\t\t\t\tsetbackupRepo(currText);\r\n\t\t\t\ti++;\r\n\t\t\t\tcurrText = currText + text[i];\r\n\t\t\t\tif (i >= text.length) {\r\n                    setTimeout(() => {\r\n                        // Getting some weird stuff with accessing states inside this function, so just set it again and delete it\r\n                        DeleteText(text);\r\n                    }, 3000)\r\n\t\t\t\t\tclearInterval(textHandle);\r\n\t\t\t\t}\r\n\t\t\t}, 60);\r\n\t\t}, 600);\r\n    }\r\n\r\n    function DeleteText(text) {\r\n        let i = text.length;\r\n        // Animate \"deletion\"\r\n        setTimeout(() => {\r\n\t\t\tlet textHandle = setInterval(() => {\r\n\t\t\t\tsetbackupRepo(text.slice(0,i));\r\n\t\t\t\ti--;\r\n\t\t\t\tif (i < 0) {\r\n\t\t\t\t\tclearInterval(textHandle);\r\n                    // Now we cycle to the next repo\r\n                    if (index + 1 >= allRepos.length) {\r\n                        setIndex(0)\r\n                    } else {\r\n                        setIndex(index + 1);\r\n                    }\r\n\t\t\t\t}\r\n\t\t\t}, 60);\r\n\t\t}, 600);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (done) {\r\n            Type(allRepos[index].name);\r\n        }\r\n    }, [index]);\r\n\r\n    return (\r\n        <div className=\"contribution\">\r\n            <div>\r\n                The last thing I've worked on was <span><a href={repoLink} target=\"_blank\" rel=\"noreferrer\">{contribution}</a></span>! Check it out!\r\n            </div>\r\n            {allRepos.length > 0 ? <div>\r\n                <div>\r\n                    Think that's pretty cool? Or maybe it wasn't your cup of tea?\r\n                </div>\r\n                <div>\r\n                    What about <span><a href={allRepos[index].url} target=\"_blank\" rel=\"noreferrer\">{backupRepo}</a></span>?\r\n                </div>\r\n            </div> : null}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Contributions","C:\\Users\\Dylan\\VSCode\\vu-dylan.github.io\\src\\components\\Header.jsx",[],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":2,"column":10,"nodeType":"52","messageId":"53","endLine":2,"endColumn":19},{"ruleId":"50","severity":1,"message":"54","line":2,"column":21,"nodeType":"52","messageId":"53","endLine":2,"endColumn":29},{"ruleId":"55","severity":1,"message":"56","line":57,"column":8,"nodeType":"57","endLine":57,"endColumn":18,"suggestions":"58"},{"ruleId":"55","severity":1,"message":"59","line":103,"column":8,"nodeType":"57","endLine":103,"endColumn":15,"suggestions":"60"},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'Type', 'done', and 'index'. Either include them or remove the dependency array.","ArrayExpression",["63"],"React Hook useEffect has missing dependencies: 'Type', 'allRepos', and 'done'. Either include them or remove the dependency array.",["64"],"no-global-assign","no-unsafe-negation",{"desc":"65","fix":"66"},{"desc":"65","fix":"67"},"Update the dependencies array to be: [Type, allRepos, done, index]",{"range":"68","text":"69"},{"range":"70","text":"69"},[2482,2492],"[Type, allRepos, done, index]",[3726,3733]]