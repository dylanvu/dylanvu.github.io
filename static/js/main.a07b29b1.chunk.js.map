{"version":3,"sources":["components/Header.jsx","components/ProjectContent.jsx","components/ProjectGroup.jsx","components/Navbar.jsx","classes/project.js","components/Contributions.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","useState","introText","setIntrotext","useEffect","document","addEventListener","getElementById","muted","play","intro","currHeaderText","i","setTimeout","headerHandle","setInterval","length","documentElement","scrollTop","body","style","height","clearInterval","AnimateHome","className","id","preload","autoPlay","loop","playsInline","src","type","ProjectContent","props","paragraphs","setParagraphs","fetch","textPath","then","r","text","split","color","hook","title","map","paragraph","validImageExtension","includes","checkIfphoto","process","alt","href","target","rel","slice","Math","floor","random","toString","ProjectGroup","scroll","borderColor","group","projects","project","projectHook","projectName","Navbar","responsiveClass","setResponsive","scrolling","scrollIntoView","behavior","onClick","icon","faGithub","faLinkedinIn","faEnvelope","Project","this","Contributions","contribution","setContrib","repoLink","setRepolink","name","url","allRepos","setAllrepos","backupRepo","setbackupRepo","index","setIndex","done","setDone","Type","currText","textHandle","DeleteText","Axios","get","Date","getTime","params","per_page","res","allPush","first","data","repo","at","push","Map","v","JSON","stringify","values","shift","catch","e","console","error","AboutMe","PythonProjects","JavaScriptProjects","OtherProjects","App","window","onbeforeunload","scrollTo","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a07b29b1.chunk.js","sourcesContent":["import {React, useEffect, useState} from 'react';\r\n\r\nconst Header = () => {\r\n    const [introText, setIntrotext] = useState(\"\");\r\n\tuseEffect(() => {\r\n\t\t// Play video and animate header typing\r\n\t\t// React has an issue with the muted in the video tag not being set properly.\r\n\t\tdocument.addEventListener(\"DOMContentLoaded\", () => {\r\n\t\t\tdocument.getElementById(\"video\").muted = true;\r\n\t\t})\r\n\t\tdocument.getElementById(\"video\").play(); // Might be necessary for chrome\r\n\t\tAnimateHome();\r\n\t}, []);\r\n\r\n\tfunction AnimateHome() {\r\n\t\tlet intro = \"Hi, I'm Dylan Vu. Welcome to my site!\";\r\n\t\tlet currHeaderText = intro[0];\r\n\t\tlet i = 0;\r\n\t\t// Animate \"typing\"\r\n\t\tsetTimeout(() => {\r\n\t\t\tlet headerHandle = setInterval(() => {\r\n\t\t\t\tsetIntrotext(currHeaderText);\r\n\t\t\t\ti++;\r\n\t\t\t\tcurrHeaderText = currHeaderText + intro[i];\r\n\t\t\t\tif (i >= intro.length) {\r\n\t\t\t\t\t// After animation ends, change height if the user has not scrolled yet\r\n\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t// Shrink header to expose content only if they haven't scrolled yet\r\n\t\t\t\t\t\t// Use both documentElement for chrome, and body for everything else\r\n\t\t\t\t\t\tif (!document.documentElement.scrollTop && !document.body.scrollTop) {\r\n\t\t\t\t\t\t\tdocument.getElementById(\"header\").style.height = \"85vh\";\r\n\t\t\t\t\t\t\t// document.getElementById(\"video\").style.height = \"85vh\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, 500)\r\n\t\t\t\t\tclearInterval(headerHandle);\r\n\t\t\t\t}\r\n\t\t\t}, 60)\r\n\t\t}, 600)\r\n    }\r\n    return (\r\n        <div className=\"header\" id=\"header\">\r\n            <div className=\"welcome\">\r\n                {introText}\r\n            </div>\r\n            <video className=\"video\" preload=\"auto\" id=\"video\" autoPlay loop muted playsInline>\r\n                <source src={process.env.PUBLIC_URL + \"/header.mp4\"} type='video/mp4' />\r\n                Video tag not supported\r\n            </video>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import { React, useEffect, useState } from 'react'\r\n\r\n/* Props:\r\ntitle = title of the project\r\nhook = project title\r\ntextPath = the path of the text description of the content relative to the public folder. This is a text file inside of the public/{projectgroup}/{projectname} directory\r\n    Example of valid text path prop: \"/projectgroup/javascript/discordqotd/discordqotd.txt\"\r\n*/\r\n\r\nconst ProjectContent = (props) => {\r\n\r\n    const [paragraphs, setParagraphs] = useState([])\r\n\r\n\r\n    useEffect(() => {\r\n        // Import text file and split into array divided by paragraph\r\n        const getParagraphs = () => {\r\n            // eslint-disable-next-line\r\n            fetch(props.textPath)\r\n                .then(r => r.text())\r\n                .then(text => {\r\n                    setParagraphs(text.split(\"\\n\"))\r\n                })\r\n\r\n        }\r\n        getParagraphs();\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    function checkIfphoto(text) {\r\n        // The photo refereced in the txt file is a path that's uploaded in the public folder\r\n        // Add more file extensions if needed\r\n        let validImageExtension = ['.jpg', '.png', '.jpeg', '.svg', '.webp']\r\n        for (let i = 0; i < validImageExtension.length; i++) {\r\n            if (text.includes(validImageExtension[i])) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    function CheckIfLink(text) {\r\n        if (text.includes(\"github.com/\") || text.includes(\"devpost.com/software\") || text.includes(\"https://\")) {\r\n            return true;\r\n        } else {\r\n            return false\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"project-content\">\r\n            <h4 style={{ color: `${props.color}` }}> {props.hook}: </h4>\r\n            <h3 style={{ color: `${props.color}` }}> {props.title} </h3>\r\n            {paragraphs.map((paragraph) => {\r\n                //console.log(paragraph);\r\n                if (checkIfphoto(paragraph)) {\r\n                    //console.log(\"Hi there\");\r\n                    return <img key={paragraph} src={process.env.PUBLIC_URL + paragraph} alt={paragraph} />\r\n                } else if (CheckIfLink(paragraph)) {\r\n                    return <p key={paragraph} className=\"text\"><a className=\"collapsible-link\" href={paragraph} target=\"_blank\" rel=\"noreferrer\">{paragraph}</a></p>\r\n                } else {\r\n                    if (paragraph[0] === \"*\") {\r\n                        return <ul>\r\n                            <li key={paragraph}>{paragraph.slice(2)}</li>\r\n                        </ul>\r\n                    }\r\n                    return <p className=\"text\" key={paragraph + Math.floor(Math.random() * 500 * Math.floor(Math.random() * 500)).toString()}>{paragraph}</p>\r\n                }\r\n\r\n            }\r\n            )}\r\n            <br /><br />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectContent","import React from 'react'\r\nimport ProjectContent from './ProjectContent'\r\n\r\n/* Props\r\ncolor = string hex color of the project groups\r\ngroup = string of name of the project group\r\nscroll = css id to scroll to\r\nprojects = array of project objects with the following attributes:\r\n    projectHook = string sentence to \"hook\" someone in\r\n    projectName = name of the specific project\r\n    textPath = path to .txt file containing the project contents in the public folder, relative to the public folder\r\n*/\r\n\r\n\r\nconst ProjectGroup = (props) => {\r\n    return (\r\n        <div className=\"ProjectGroup\">\r\n            <button type=\"button\" className=\"project-group-title\" id={props.scroll} style={{borderColor : `${props.color}`}}>{props.group}</button>\r\n            <br/>\r\n            <br/>\r\n            {props.projects.map((project) => (\r\n                <ProjectContent key={project.projectName + Math.floor(Math.random() * 500).toString()} hook={project.projectHook} title={project.projectName} id={project.projectName} textPath={project.textPath} color={props.color}/>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n// When you refresh, the content does not get routed again. Check out https://stackoverflow.com/questions/27928372/react-router-urls-dont-work-when-refreshing-or-writing-manually\r\nexport default ProjectGroup","import { React, useState } from 'react'\r\n// Import font awesome icons. Follow these instructions: https://fontawesome.com/how-to-use/on-the-web/using-with/react\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faGithub } from '@fortawesome/free-brands-svg-icons'\r\nimport { faLinkedinIn } from '@fortawesome/free-brands-svg-icons'\r\nimport { faEnvelope } from '@fortawesome/free-solid-svg-icons'\r\n\r\n// The eslint-disable-next-line is necessary because these are <a> and not <button> so tons of warnings pop up.\r\n//I'm a bit lazy to fix this because it would involve fixing the css styling and this works as it is\r\nconst Navbar = () => {\r\n    const [responsiveClass, setResponsive] = useState(\"inactive\");\r\n\r\n    function scrolling(id) {\r\n        if (responsiveClass === \"is-responsive\") {\r\n            setResponsive('inactive');\r\n        }\r\n        document.getElementById(id).scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n\r\n    function toggleBurger() {\r\n        // console.log(\"Burger clicked\");\r\n        if (responsiveClass === \"inactive\") {\r\n            setResponsive('is-responsive');\r\n        } else {\r\n            setResponsive('inactive');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <nav className={`navbar ${responsiveClass}`} id=\"navbar\">\r\n            {/* eslint-disable-next-line */}\r\n            <a className=\"nav-link\" onClick={() => scrolling('About')}><span className=\"name\">Dylan Vu</span></a>\r\n            {/* eslint-disable-next-line */}\r\n            <a className=\"nav-link\" style={{ color: \"#c0392b\" }} onClick={() => scrolling('JS')}><span>JavaScript/NodeJS</span></a>\r\n            {/* eslint-disable-next-line */}\r\n            <a className=\"nav-link\" style={{ color: \"#2081C3\" }} onClick={() => scrolling('Python')}><span>Python</span></a>\r\n            {/* eslint-disable-next-line */}\r\n            <a className=\"nav-link\" style={{ color: \"#6DA34D\" }} onClick={() => scrolling('Other')}><span>Other</span></a>\r\n            {/* eslint-disable-next-line */}\r\n            <a className=\"nav-link\" style={{ color: \"#FE5D26\" }} href=\"/about/Dylan Vu Resume.pdf\" target=\"_blank\" rel=\"noreferrer\"><span>Resume</span></a>\r\n            <a href=\"https://github.com/vu-dylan\" target=\"_blank\" rel=\"noreferrer\" style={{ color: \"#f2f2f2\" }}>\r\n                <FontAwesomeIcon\r\n                    icon={faGithub}\r\n                    id=\"github\"\r\n                    className=\"icon\"\r\n                />\r\n            </a>\r\n            <a href=\"https://www.linkedin.com/in/dylanvu9/\" target=\"_blank\" rel=\"noreferrer\" style={{ color: \"#f2f2f2\" }}>\r\n                <FontAwesomeIcon\r\n                    icon={faLinkedinIn}\r\n\r\n                    className=\"icon\"\r\n                />\r\n            </a>\r\n            <a href=\"mailto:dylanvu@ucsb.edu\" target=\"_blank\" rel=\"noreferrer\" style={{ color: \"#f2f2f2\" }}>\r\n                <FontAwesomeIcon\r\n                    icon={faEnvelope}\r\n\r\n                    className=\"icon\"\r\n                />\r\n            </a>\r\n            <div className={`hamburger ${responsiveClass}`} id=\"hamburger\" onClick={() => toggleBurger()}>\r\n                <span className=\"line\"></span>\r\n                <span className=\"line\"></span>\r\n                <span className=\"line\"></span>\r\n            </div>\r\n        </nav>\r\n    )\r\n\r\n}\r\n\r\nexport default Navbar","class Project {\r\n    constructor(projectHook, projectName, textPath) {\r\n        this.projectHook = projectHook;\r\n        this.projectName = projectName;\r\n        this.textPath = textPath\r\n    }\r\n}\r\n\r\nexport default Project","import {React, useState, useEffect} from 'react';\r\nimport Axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faGithub } from '@fortawesome/free-brands-svg-icons'\r\n\r\nconst Contributions = () => {\r\n\r\n    const [contribution, setContrib] = useState(\"\");\r\n    const [repoLink, setRepolink] = useState(\"\");\r\n    const [allRepos, setAllrepos] = useState([{name: \"\", url: \"\"}]);\r\n    const [backupRepo, setbackupRepo] = useState(\"\");\r\n    const [index, setIndex] = useState(0);\r\n    const [done, setDone] = useState(false);\r\n    useEffect(() => {\r\n        // TODO: Get description of the featured GitHub Repo\r\n        // https://docs.github.com/en/rest/reference/activity#list-public-events-for-a-user\r\n        // Use Github API to get most recent push\r\n        // Safari was broken so try this: https://stackoverflow.com/questions/47877808/axios-get-not-working-in-safari-browser \r\n        Axios.get(\"https://api.github.com/users/vu-dylan/events/public\" + '?nocache=' + new Date().getTime(), {\r\n            params: {per_page: 70}\r\n        }).then((res) => {\r\n            // console.log(res.data);\r\n            let allPush = [];\r\n            let first = true;\r\n\r\n            // Iterate through all events and get only push events to display\r\n            for (let i = 0; i < res.data.length; i++) {\r\n                if (res.data[i].type === 'PushEvent') {\r\n                    let name = res.data[i].repo.name.split('/').at(-1);\r\n                    // Change the name to this website if the last thing I worked on was my portfolio\r\n                    if (name === \"vu-dylan.github.io\") {\r\n                        name = \"this website\";\r\n                    }\r\n                    if (first) {\r\n                        first = false;\r\n                        // console.log(name)\r\n                        setContrib(name);\r\n                        setRepolink(\"https://github.com/\" + res.data[i].repo.name);\r\n                    }\r\n                    allPush.push({name: name, url: \"https://github.com/\" + res.data[i].repo.name})\r\n                }\r\n            }\r\n            // If there is literally no push events, just show the last thing I did.\r\n            if (first) {\r\n                setContrib(res.data[0].repo.name.split('/').at(-1));\r\n                setRepolink(\"https://github.com/\" + res.data[0].repo.name);\r\n            }\r\n            // Remove duplicates\r\n            // https://stackoverflow.com/questions/1960473/get-all-unique-values-in-a-javascript-array-remove-duplicates\r\n            allPush = [...new Map(allPush.map(v => [JSON.stringify(v), v])).values()]\r\n            // Remove first element, which is the most recent thing\r\n            allPush.shift();\r\n            setDone(true);\r\n            setAllrepos(allPush);\r\n        }).catch((e) => {\r\n            console.error(e);\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (done && allRepos.length > 0) {\r\n            setTimeout(() => {\r\n                Type(allRepos[index].name);\r\n            }, 2000);\r\n            \r\n        }\r\n    }, [allRepos]);\r\n\r\n    function Type(text) {\r\n\t\tlet currText = text[0];\r\n\t\tlet i = 0;\r\n\t\t// Animate \"typing\"\r\n\t\tsetTimeout(() => {\r\n\t\t\tlet textHandle = setInterval(() => {\r\n\t\t\t\tsetbackupRepo(currText);\r\n\t\t\t\ti++;\r\n\t\t\t\tcurrText = currText + text[i];\r\n\t\t\t\tif (i >= text.length) {\r\n                    setTimeout(() => {\r\n                        // Getting some weird stuff with accessing states inside this function, so just set it again and delete it\r\n                        DeleteText(text);\r\n                    }, 3000)\r\n\t\t\t\t\tclearInterval(textHandle);\r\n\t\t\t\t}\r\n\t\t\t}, 60);\r\n\t\t}, 600);\r\n    }\r\n\r\n    function DeleteText(text) {\r\n        let i = text.length;\r\n        // Animate \"deletion\"\r\n        setTimeout(() => {\r\n\t\t\tlet textHandle = setInterval(() => {\r\n\t\t\t\tsetbackupRepo(text.slice(0,i));\r\n\t\t\t\ti--;\r\n\t\t\t\tif (i < 0) {\r\n\t\t\t\t\tclearInterval(textHandle);\r\n                    // Now we cycle to the next repo\r\n                    if (index + 1 >= allRepos.length) {\r\n                        setIndex(0)\r\n                    } else {\r\n                        setIndex(index + 1);\r\n                    }\r\n\t\t\t\t}\r\n\t\t\t}, 60);\r\n\t\t}, 600);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (done) {\r\n            Type(allRepos[index].name);\r\n        }\r\n    }, [index]);\r\n\r\n    return (\r\n        <div className=\"contribution\">\r\n            {contribution === \"\" ? \r\n            <div>Thanks for stopping by! Come learn more about me and my projects!</div> :\r\n            <div>\r\n            The last thing I've worked on was <span><a href={repoLink} target=\"_blank\" rel=\"noreferrer\">{contribution}</a></span>! Check it out!\r\n            </div>}\r\n            {allRepos[0].name === \"\" || allRepos[0].url === \"\" || contribution === \"\" ? \r\n            null : \r\n            <div>\r\n                <div>\r\n                    Think that's pretty cool? Or maybe it wasn't your cup of tea?\r\n                </div>\r\n                <div>\r\n                    What about <span><a href={allRepos[index].url} target=\"_blank\" rel=\"noreferrer\">{backupRepo}</a></span>?\r\n                </div>\r\n                <div>\r\n                    Maybe you'll find even better something here?\r\n                </div>\r\n                <div>\r\n                    <a href=\"https://github.com/vu-dylan\" target=\"_blank\" rel=\"noreferrer\" style={{ color: \"#f2f2f2\" }}>\r\n                        <FontAwesomeIcon\r\n                            icon={faGithub}\r\n                            id=\"github\"\r\n                            className=\"githubIcon\"\r\n                        />\r\n                    </a>\r\n                </div>\r\n                <div>\r\n                    Or just keep scrolling to find out!\r\n                </div>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Contributions","import \"./App.css\";\r\nimport { useEffect, useState } from \"react\"\r\nimport Header from \"./components/Header\";\r\nimport ProjectGroup from \"./components/ProjectGroup\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport Project from \"./classes/project.js\";\r\nimport Contributions from \"./components/Contributions\";\r\n\r\n// If there are issues with net::ERR_ABORTED 404, look into package.json and make sure the homepage is set to github pages with the / repository name.\r\n// Example: https://vu-dylan.github.io/portfolio/\r\n\r\nlet AboutMe = [new Project(\"My name is Dylan Vu\", \"\", \"/about/about.txt\"), new Project(\"Resume at a Glance\", \"\", \"/about/glance.txt\"), new Project(\"Current Learning Goals\", \"\", \"/about/next.txt\")]\r\n\r\nlet PythonProjects = [\r\n\tnew Project(\"Draw on a projector and a computer for a seamless hybrid learning experience\", \"GRIP Board\", \"/projectgroup/python/gripboard/gripboard.txt\"),\r\n\tnew Project(\"Convert your Spotify playlist to a YouTube playlist\", \"You-tify\", \"/projectgroup/python/youtify/youtify.txt\"),\r\n\tnew Project(\"Record the current UCSB course availability with the click of a button\", \"GoldWebscraper\", \"/projectgroup/python/goldwebscraper/goldwebscraper.txt\")\r\n]\r\n\r\nlet JavaScriptProjects = [\r\n\tnew Project(\"Find a Chemical Engineering Internship and/or Job\", \"UCSB AIChE Careers Bot\", \"/projectgroup/javascript/aichecareers/aichecareers.txt\"),\r\n\tnew Project(\"Add a Chaotic Twist to an Auto-Battler Game\", \"Super RNG Pets\", \"/projectgroup/javascript/super-rng-pets/super-rng-pets.txt\"),\r\n\tnew Project(\"Cut Retail Waste with Global Inventory Management\", \"F•sync\", \"/projectgroup/javascript/fsync/fsync.txt\"),\r\n\tnew Project(\"Increase engagement in your Discord server\", \"Discord Question of the Day\", \"/projectgroup/javascript/discordqotd/discordqotd.txt\"),\r\n\tnew Project(\"Add and save your favorite movies through a social media app\", \"SeenIt\", \"/projectgroup/javascript/seenit/seenit.txt\"),\r\n\tnew Project(\"Draw with your friends in a collaborative whiteboard\", \"SketchedOut\", \"/projectgroup/javascript/sketchedout/sketchedout.txt\"),\r\n\tnew Project(\"Modernize your club website\", \"UCSB Robotics Website\", \"/projectgroup/javascript/ucsbrobotics/ucsbrobotics.txt\")\r\n]\r\n\r\nlet OtherProjects = [new Project(\"Use a VR controller that gives tactile feedback\", \"GRIP Controller\", \"/projectgroup/clangs/grip/grip.txt\"), new Project(\"Get fit through a mobile fitness AI-generated text-adventure game\", \"Geoverse\", \"/projectgroup/flutter/geoverse/geoverse.txt\")]\r\n\r\nfunction App() {\r\n\r\n\t// When you refresh, get sent to the top.\r\n\twindow.onbeforeunload = function () {\r\n\t\twindow.scrollTo(0, 0);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Header/>\r\n\t\t\t<Navbar />\r\n\t\t\t<div className=\"content\">\r\n\t\t\t\t<Contributions/>\r\n\t\t\t\t<ProjectGroup projects={AboutMe} color={\"#36393f\"} group=\"About\" scroll=\"About\" />\r\n\t\t\t\t<ProjectGroup projects={JavaScriptProjects} color={\"#c0392b\"} group=\"NodeJS\" scroll=\"JS\" />\r\n\t\t\t\t<ProjectGroup projects={PythonProjects} color={\"#2081C3\"} group=\"Python\" scroll=\"Python\" />\r\n\t\t\t\t<ProjectGroup projects={OtherProjects} color={\"#6DA34D\"} group=\"C# and Flutter\" scroll=\"Other\" />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n\r\n// D++ red? #D40000\r\n// Old JS red: #DD1C1A\r\n\r\n/* TODO:\r\n\r\nProject arrays into JSON ?\r\n\r\n*/\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}